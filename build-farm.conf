
# -*-perl-*- hey - emacs - this is a perl file

package PGBuild;

use strict;

use vars qw(%conf);

my $branch;
{
	no warnings qw(once);
	$branch = $main::branch;
}

%conf = 
	(
	 cvsmethod => 'update', # or 'export'
	 make => 'make', # or gmake if required. can include path if necessary.
	 tar_log_cmd => undef, # default is "tar -z -cf runlogs.tgz *.log"
	                       # replacement must have the same effect
	 cvsrepo => undef, # meaning use the default, anoncvs from postgresql.org
	 build_root => '/home/andrew/pgfarmbuild',
	 use_vpath => undef, # set true to do vpath builds

     # path to directory with auxiliary web script 
     # if relative, the must be relative to buildroot/branch
     aux_path => "../..",

	 keep_error_builds => 0,
	 target => "http://www.pgbuildfarm.org/cgi-bin/pgstatus.pl",
	 upgrade_target => "http://www.pgbuildfarm.org/cgi-bin/upgrade.pl",
	 animal => "CHANGEME",
	 secret => "CHANGEME",
	 force_every => 336 , # max hours between builds, undef or 0 = unforced
	 print_success => undef,

	 # pattern for files whose changes do NOT trigger a build
	 # use qr[/(doc|po)/] to ignore changes to docs and po files (recommended)
	 # undef means don't ignore anything.
	 trigger_filter => undef,

	 # settings for mail notices - default to notifying nobody
	 # these lists contain addresses to be notified
	 # must be complete email addresses, as the email is sent from the server

	 mail_events =>
	 {
		 all => [], # unconditional
		 fail => [], # if this build fails
		 change => [], # if this build causes a state change
		 green => [], # if this build causes a state change to/from OK
	 },
		 
	 # env settings to apply within build/report process
	 # these settings will be seen by all the processes, including the
	 # configure process.

	 build_env =>
	 {
		 # use a dedicated cache for the build farm. this should give us
		 # very high hit rates and slightly faster cache searching.

		 CCACHE_DIR => "/home/andrew/pgfarmbuild/ccache/$branch", 

         ### use these settings for CYGWIN
         # CYGWIN => 'server',
         # MAX_CONNECTIONS => '3',

		 ### set this if you need a proxy setting for the
		 # outbound web transaction that reports the results
		 # BF_PROXY => 'http://my.proxy.server:portnum/',

	 },
	 # env settings to pass to configure. These settings will only be seen by 
	 # configure.
	 config_env => 
	 { 
		 CC => 'ccache gcc', 
	 },
	 # don't use --prefix or --with-pgport here 
	 # they are set up by the script
     # per-branch config can be done here or
     # more simply by using the examples below.
	 # (default ldap flag is below because it's not supported in all branches)
	 config_opts => 
	 [qw(
		 --enable-cassert 
		 --enable-debug
		 --enable-nls
		 --enable-integer-datetimes
		 --with-perl 
		 --with-python 
		 --with-tcl
		 --with-krb5 --with-includes=/usr/include/et
		 --with-openssl
		 )],

	 # use a different port for each branch so they can't collide
	 # these are the values used in --with-pgport

	 # regarding patch made 17 July 2005, Tom Lane advises:
	 # The buildfarm config stuff should recommend choosing 4-digit port
	 # numbers, because the patch I put in will fall back to 65432 if the
	 # configuration port is 5 digits.

	 branch_ports => 
	 {
		 REL8_1_STABLE => 5683,
		 REL8_0_STABLE => 5682,
		 REL7_4_STABLE => 5681,
		 REL7_3_STABLE => 5680,
		 REL7_2_STABLE => 5679,
		 HEAD          => 5678,
	 },

	 );

##################################
#
# examples of per branch processing
# tailor as required for your site.
#
##################################

# ldap support is new as of 8.2
if ($branch eq 'HEAD' || $branch ge 'REL8_2')
{
	push(@{$conf{config_opts}},"--with-ldap");
}


if ($branch eq 'HEAD')
{
#     push(@{$conf{config_opts}},"--enable-depend");
}
elsif ($branch =~ /^REL7_/)
{
#     push(@{$conf{config_opts}},"--without-tk");
}


1;
